import matplotlib.pyplot as plt
import numpy as np

# variaveis globais
diasDaSemana = ['domingo', 'segunda', 'terca', 'quarta', 'quinta', 'sexta', 'sabado']
anoAtual = 2025
continuar = ['sim', 'n√£o']

# Fun√ß√£o para for√ßar o usu√°rio a escolher uma op√ß√£o v√°lida de uma lista
def forcaOpcao(stg, listaOpcao):
    exibirOpcoes = '\n'.join((listaOpcao))
    opcao = input(f"{stg}\n{exibirOpcoes}\n")
    while not opcao in listaOpcao:
        opcao = input(f"{stg}\n")
    return opcao

# Fun√ß√£o para garantir que o usu√°rio digite uma string (n√£o num√©rica)
def garanteString(stg):
    string = input(stg)
    while string.isnumeric():
        print("Inv√°lido")
        string = input(stg)
    return string

# Fun√ß√£o para calcular a m√©dia de valores inseridos pelo usu√°rio para cada dia da semana
def calcularMedia(stg, array, stg1, medida):
    i = 0
    soma = 0
    while i < 7:
        informacao = garanteNumero(f"{stg} {i + 1}¬∞ dia da semana:")
        array.append(informacao)
        i += 1

    print("\n")

    for i in range(len(diasDaSemana)):
        print(f"{diasDaSemana[i]} {stg1} {array[i]} {medida}")
        soma += array[i]
    media = soma / len(array)
    print("\n")
    print(f"A media semanal {stg1} foi {int(media)} {medida}")

    return media

# Fun√ß√£o para garantir que o usu√°rio digite um n√∫mero com quantidade de d√≠gitos espec√≠fica
def garanteNumero(stg,qtd):
    telefone = input(stg)
    if len(telefone) != qtd:
        telefone = garanteNumero(stg)
    else:
        while not telefone.isnumeric():
            telefone = garanteNumero()
        telefone = int(telefone)
    return telefone

# Fun√ß√£o para calcular a m√©dia de um array e exibir os valores
def media(array, stg1, medida):
    soma = 0
    for i in range(len(array)):
        print(f"{diasDaSemana[i]} {stg1} {array[i]} {medida}")
        soma += array[i]
    medias = soma / len(array)
    return medias

# Fun√ß√£o para alertar sobre o n√≠vel m√©dio da √°gua
def alertaMediaAgua(mediaNvlAgua):
    if mediaNvlAgua > 200:
        print("PERIGO!!! n√≠vel da √°gua est√° muito alto")
    elif mediaNvlAgua > 130:
        print("Cuidado!! o n√≠vel da √°gua est√° meio alto")
    else:
        print("Fique tranquilo, o n√≠vel da √°gua est√° baixo")

# Fun√ß√£o para alertar sobre a possibilidade de chuva com base na umidade
def alertaChuva(historicoUmidade):
    for i in range(len(historicoUmidade)):
        if historicoUmidade[i] > 70 and historicoUmidade[i] < 85:
            print(f"{diasDaSemana[i]}, poder√° chover")
        elif historicoUmidade[i] > 85:
            print(f"{diasDaSemana[i]}, √≠ndices altos de umidade, cuidado ao sair de casa!!!")
        else:
            print(f"{diasDaSemana[i]}, umidade normal sem riscos de chuva")

# Fun√ß√£o para alertar sobre a m√©dia de temperatura
def alertaMediaTerperatura(mediaTemperatura):
    if mediaTemperatura > 30:
        print("Est√° muito quente")
    elif mediaTemperatura > 25:
        print("Est√° calor")
    elif mediaTemperatura > 21:
        print("Temperatura normal")
    elif mediaTemperatura > 15:
        print("Frio")
    else:
        print("Muito frio")

# Fun√ß√£o para gerar gr√°fico dos dados semanais
def gerarGrafico(diasDaSemana,historicoNvlAgua,historicoUmidade,historicoTemperatura):
    dias = np.arange(len(diasDaSemana))
    plt.figure(figsize=(10, 6))
    plt.plot(dias, historicoNvlAgua, marker='o', label='N√≠vel da √Ågua (cm)')
    plt.plot(dias, historicoUmidade, marker='o', label='Umidade (%)')
    plt.plot(dias, historicoTemperatura, marker='o', label='Temperatura (¬∞C)')
    plt.xticks(dias, diasDaSemana)
    plt.xlabel('Dias da Semana')
    plt.ylabel('Valores')
    plt.title('Dados Semanais do AquaGuard')
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    plt.show()
    print("Obrigado por usar o AquaGuard, tenha uma boa semana, flw üôã‚Äç‚ôÄÔ∏èüôã‚Äç‚ôÇÔ∏è")

# Fun√ß√£o para exibir mensagem final ao usu√°rio
def mensagemFinal(pode):
    if pode == 'sim':
        print(f"Ok, quaso haja futuros incidentes na sua regi√£o mandaremos uma menagem, muito obrigado {nome}")
    else:
        print(f"Tudo bem, qualquer coisa acesse o AquaGuard e mude sua op√ß√£o, at√© mais {nome}")

# In√≠cio do programa - Boas vindas
comecar = forcaOpcao("Ol√° poderia preencher um pr√© cadastro para usar o site?", continuar)
if comecar == 'n√£o':
    print("Tudo bem, tenha uma boa semana, flw üôã‚Äç‚ôÄÔ∏èüôã‚Äç‚ôÇÔ∏è")

    # continua codigo
else:

    # cadastro do usu√°rio
    nome = garanteString("Digite seu nome: ")
    anoDeNascimento = garanteNumero("Digite seu ano de nascimento: ",4)
    idade = anoAtual - anoDeNascimento
    cep = garanteNumero("Digite seu cep: ",8)
    telefone = garanteNumero("Digite seu telefone (formato = 5511999999999): ",13)
    cargo = garanteString("Qual seu cargo? ")

    print("\n")
    print("Obrigado por preencher os dados üßë‚ÄçüíªüòÅüëç")
    print(f"Seja bem vindo {nome} ao AquaGuardüßäüßäüßä!!!")
    print(
        "Aqui voc√™ poder√° ver sobre o n√≠vel da agu√° e umidade em cada dia da semana e sua m√©dia, alem da temperatura diaria da semana üå°Ô∏èüå°")

    # entrada para escolher tipo de usu√°rio
    opcao = ["civil", "funcion√°rio p√∫blico"]
    escolha = forcaOpcao(
        "Voc√™ √© um civil ou um funcion√°rio p√∫blico (diferen√ßa, civil dados semanais j√° computados, funcio√°rio ter√° inputs para falar os dados): ",
        opcao)

    if escolha == "civil":

        # Dados simulados do arduino
        historicoNvlAgua = [200, 100, 115, 170, 240, 166, 187]
        historicoUmidade = [80, 60, 75, 90, 57, 66, 99]
        historicoTemperatura = [20, 27, 35, 20, 17, 12, 11]

        # C√°lculo e exibi√ß√£o das m√©dias
        mediaNvlAgua = media(historicoNvlAgua, "o n√≠vel da √°gua foi", " cent√≠metros")
        pode = forcaOpcao("Pode continuar?",continuar)

        mediaUmidade = media(historicoUmidade, "a porcentagem da umidade foi", "%")
        pode = forcaOpcao("Pode continuar?", continuar)

        mediaTemperatura = media(historicoTemperatura, "a temperatura foi", "¬∞C")
        pode = forcaOpcao("Pode continuar?", continuar)

        # alerta de acordo com a media da agua
        print("ALERTA N√çVEL DA √ÅGUA\n")
        alertaNvlAgua = alertaMediaAgua(mediaNvlAgua)

        # alerta de acordo com a umidade diaria
        print("ALERTA CHUVA\n")
        alertaUmidade = alertaChuva(historicoUmidade)

        # alerta de acordo com a media de temperatura
        print("ALERTA TEMPERATURA\n")
        alertaTemperatura = alertaMediaTerperatura(mediaTemperatura)

        print("\n")
        print(f"Obrigado pela sua aten√ß√£o {nome}, muito bom saber que a pessoas de {idade} interressadas no AquaGuard")
        print(f"Sempre que voc√™ quiser saber mais sobre os dados do seu cep {cep}, s√≥ acessar o AquaGuard")

        pode = forcaOpcao(f"Podemos mandar mensagem no telefone cadastrado {telefone}?", continuar)
        mensagemFinal(pode)
        # gr√°fico
        grafico = gerarGrafico(diasDaSemana, historicoNvlAgua, historicoUmidade, historicoTemperatura)

    # cadastro funcion√°rio p√∫blico
    else:
        senhaDeEntrada = ['1234']
        senhaParaEntrada = forcaOpcao("Se voc√™ for mesmo um funcion√°rio p√∫blico digite a senha para entrada (1234): ",
                                      senhaDeEntrada)

        # Arrays para armazenar dados inseridos pelo funcion√°rio p√∫blico
        historicoNvlAgua = []
        historicoUmidade = []
        historicoTemperatura = []

        # Coleta e c√°lculo das m√©dias dos dados inseridos
        mediaNvlAgua = calcularMedia("Qual era o nivel da √°gua no", historicoNvlAgua, "o n√≠vel da √°gua foi",
                                     " cent√≠metros")
        mediaUmidade = calcularMedia("Qual era a porcentagem da umidade no", historicoUmidade,
                                     "a porcentagem da umidade foi", "%")
        mediaTemperatura = calcularMedia("qual era a temperatura no", historicoTemperatura, "a temperatura foi", "¬∞C")

        # alerta de acordo com a media da agua
        print("ALERTA N√çVEL DA √ÅGUA\n")
        alertaNvlAgua = alertaMediaAgua(mediaNvlAgua)

        # alerta de acordo com a umidade diaria
        print("ALERTA CHUVA\n")
        alertaUmidade = alertaChuva(historicoUmidade)

        # alerta de acordo com a media de temperatura
        print("ALERTA TEMPERATURA\n")
        alertaTemperatura = alertaMediaTerperatura(mediaTemperatura)

        print("\n")
        print(
            f"Obrigado pela incrementa√ß√£o de dados {nome}, muito bom saber que a pessoas de {idade} est√£o trabalhando no AquaGuard e a favor do bem da popula√ß√£o")
        pode = forcaOpcao(f"Podemos mandar mensagem no telefone cadastrado {telefone}?", continuar)
        mensagemFinal(pode)
        grafico = gerarGrafico(diasDaSemana, historicoNvlAgua, historicoUmidade, historicoTemperatura)

